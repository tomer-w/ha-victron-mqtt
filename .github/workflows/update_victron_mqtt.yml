name: Update victron_mqtt Dependency and Translations

on:
  schedule:
    - cron: '0 4 * * *' # Runs daily at 04:00 UTC
  workflow_dispatch:

permissions:
  contents: write
  pull-requests: write

jobs:
  update-victron-mqtt:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Get latest victron_mqtt release
        id: get_release
        run: |
          latest=$(curl -s https://pypi.org/pypi/victron_mqtt/json | jq -r .info.version)
          echo "latest_version=$latest" >> $GITHUB_OUTPUT

      - name: Check if update is needed
        id: check_update
        run: |
          current=$(jq -r '.requirements[0]' custom_components/victron_mqtt/manifest.json | cut -d'=' -f3)
          latest="${{ steps.get_release.outputs.latest_version }}"
          echo "Current: $current, Latest: $latest"
          if [ "$current" = "$latest" ]; then
            echo "No update needed."
            echo "update_needed=false" >> $GITHUB_OUTPUT
          else
            echo "Update needed."
            echo "update_needed=true" >> $GITHUB_OUTPUT
          fi

      - name: Update manifest.json with new version
        if: steps.check_update.outputs.update_needed == 'true'
        run: |
          latest="${{ steps.get_release.outputs.latest_version }}"
          # Get current version
          current_version=$(jq -r '.version' custom_components/victron_mqtt/manifest.json)
          year=$(echo "$current_version" | cut -d. -f1)
          minor=$(echo "$current_version" | cut -d. -f2)
          patch=$(echo "$current_version" | cut -d. -f3)
          # Bump patch version
          new_patch=$((patch + 1))
          new_version="$year.$minor.$new_patch"
          jq \
            --arg v "$latest" \
            --arg nv "$new_version" \
            '.requirements[0] = "victron_mqtt=="+$v | .version = $nv' \
            custom_components/victron_mqtt/manifest.json > manifest.tmp && mv manifest.tmp custom_components/victron_mqtt/manifest.json

      - name: Download victron_mqtt release package from PyPI
        if: steps.check_update.outputs.update_needed == 'true'
        run: |
          latest="${{ steps.get_release.outputs.latest_version }}"
          pip install --upgrade pip
          pip download --no-binary :all: --no-deps --dest . "victron_mqtt==$latest"

      - name: Extract victron_mqtt.json from release package
        if: steps.check_update.outputs.update_needed == 'true'
        run: |
          set -e
          latest="${{ steps.get_release.outputs.latest_version }}"
          tar -xzf victron_mqtt-$latest.tar.gz victron_mqtt-$latest/victron_mqtt.json
          mv victron_mqtt-$latest/victron_mqtt.json victron_mqtt.json
          rm -rf victron_mqtt-$latest.tar.gz

      - name: Merge topics into en.json
        if: steps.check_update.outputs.update_needed == 'true'
        run: |
          python3 .github/scripts/merge_topics.py

      - name: Create Pull Request
        if: steps.check_update.outputs.update_needed == 'true'
        uses: peter-evans/create-pull-request@v7
        with:
          branch: update/victron-mqtt-${{ steps.get_release.outputs.latest_version }}
          delete-branch: true
          title: "Update victron_mqtt to ${{ steps.get_release.outputs.latest_version }} and merge topics"
          body: "This PR updates victron_mqtt to ${{ steps.get_release.outputs.latest_version }} and merges new topics into translations."
          commit-message: "Update victron_mqtt to ${{ steps.get_release.outputs.latest_version }} and merge topics"
          base: main
          labels: "dependencies"
